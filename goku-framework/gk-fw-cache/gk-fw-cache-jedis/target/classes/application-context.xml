<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


    <context:property-placeholder location="classpath:redisPool.properties" file-encoding="UTF-8"/>

    <!--redis pool-->
    <bean id="jedisPoolFactoryConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.maxTotal}"/>
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="maxWaitMillis" value="${redis.maxWait}"/>
        <property name="minIdle" value="${redis.minIdle}"/>
        <property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
        <property name="testOnReturn" value="${redis.testOnReturn}"/>
        <property name="testWhileIdle" value="${redis.testWhileIdle}"/>
    </bean>
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="destroy">
        <constructor-arg ref="jedisPoolFactoryConfig" name="poolConfig"/>
        <constructor-arg value="${redis.ip}" name="host" type="java.lang.String"/>
        <constructor-arg value="${redis.port}" name="port" type="int"/>
    </bean>

    <bean id="jedisPool6380" class="redis.clients.jedis.JedisPool" destroy-method="destroy">
        <constructor-arg ref="jedisPoolFactoryConfig" name="poolConfig"/>
        <constructor-arg value="${redis.ip}" name="host" type="java.lang.String"/>
        <constructor-arg value="6380" name="port" type="int"/>
    </bean>

    <!-- sharded redis -->
    <bean id="jedisShardInfo1" class="redis.clients.jedis.JedisShardInfo">
        <constructor-arg value="${redis.ip}" name="host" type="java.lang.String"/>
        <constructor-arg value="${redis.port}" name="port" type="int"/>
    </bean>

    <bean id="jedisShardInfo2" class="redis.clients.jedis.JedisShardInfo">
        <constructor-arg value="${redis.ip}" name="host" type="java.lang.String"/>
        <constructor-arg value="6380" name="port" type="int"/>
    </bean>

    <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool" destroy-method="destroy">
    <constructor-arg ref="jedisPoolFactoryConfig" name="poolConfig"/>
        <constructor-arg name="shards">
            <list>
                <ref bean="jedisShardInfo1"/>
                <ref bean="jedisShardInfo2"/>
            </list>
        </constructor-arg>
    </bean>

    <bean id="jedisHolder" class="com.goku.redis.JedisHolder">
    <property name="jedisPoolMap">
            <map>
                <entry key="default" value-ref="jedisPool"/>
                <entry key="test6380" value-ref="jedisPool6380"/>
            </map>
        </property>
        <!--如果使用shard redis-->
        <property name="shardedJedisPool" ref="shardedJedisPool"/>
    </bean>

    <context:component-scan base-package="com.goku.redis"/>

    <aop:aspectj-autoproxy proxy-target-class="true"/>

</beans>